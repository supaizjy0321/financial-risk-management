name: Financial Risk Management CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Part 1: Code Integration
  integrate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
    
    - name: Check code style
      run: |
        flake8 . --max-line-length=100 --statistics

  # Part 2: Automated Testing
  test:
    needs: integrate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest

  # Part 3: Deployment
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Prepare for deployment
      run: |
        echo "Preparing application for deployment"
        python -c "import risk_management; print('Application successfully imported')"
    
    - name: Deploy
      run: |
        echo "Deploying to production environment"
        # Here you would typically add commands to deploy to your server
        # For demonstration, we'll just verify the application can run
        python -c "
        from risk_management import RiskCalculator
        calc = RiskCalculator([0.01, -0.02, 0.03])
        print('Deployment verification successful: ', calc.get_risk_metrics())
        "
